"""
This type stub file was generated by pyright.
"""

"""Client and server classes corresponding to protobuf-defined services."""
class RecognizerStub:
    """A set of methods for voice recognition.
    """
    def __init__(self, channel) -> None:
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        ...
    


class RecognizerServicer:
    """A set of methods for voice recognition.
    """
    def RecognizeStreaming(self, request_iterator, context):
        """Expects audio in real-time
        """
        ...
    


def add_RecognizerServicer_to_server(servicer, server): # -> None:
    ...

class Recognizer:
    """A set of methods for voice recognition.
    """
    @staticmethod
    def RecognizeStreaming(request_iterator, target, options=..., channel_credentials=..., call_credentials=..., insecure=..., compression=..., wait_for_ready=..., timeout=..., metadata=...):
        ...
    


class AsyncRecognizerStub:
    """A set of methods for async voice recognition.
    """
    def __init__(self, channel) -> None:
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        ...
    


class AsyncRecognizerServicer:
    """A set of methods for async voice recognition.
    """
    def RecognizeFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        ...
    
    def GetRecognition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        ...
    


def add_AsyncRecognizerServicer_to_server(servicer, server): # -> None:
    ...

class AsyncRecognizer:
    """A set of methods for async voice recognition.
    """
    @staticmethod
    def RecognizeFile(request, target, options=..., channel_credentials=..., call_credentials=..., insecure=..., compression=..., wait_for_ready=..., timeout=..., metadata=...):
        ...
    
    @staticmethod
    def GetRecognition(request, target, options=..., channel_credentials=..., call_credentials=..., insecure=..., compression=..., wait_for_ready=..., timeout=..., metadata=...):
        ...
    


